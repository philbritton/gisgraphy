<html>
<head>
<link rel="stylesheet" type="text/css" media="all" href="../css/maven-base.css" />
<link rel="stylesheet" type="text/css" media="all" href="../css/maven-theme.css" />
<link rel="stylesheet" type="text/css" media="all" href="../css/site.css" />
<style type="text/css" media="all">
h1 {
	counter-reset: section;
	counter-reset: subsection;
	counter-reset: indexsection;
	counter-reset: indexsubsection;
	counter-reset: subsubsection;
}

h2 {
	counter-increment: section;
	counter-reset: subsection;
}

h2:before {
	content: counter(section) " ";
}

h3 {
	counter-increment: subsection;
	counter-reset: subsubsection;
}

h3:before {
	content: counter(section) "." counter(subsection) " ";
}

h4 {
	counter-increment: subsubsection;
}

h4:before {
	content: counter(section) "." counter(subsection) "."
		counter(subsubsection) " ";
}
</style>
</head>
<body>

<div><h1>Environement setup for Linux</h1>
Before install and launch Gisgraphy, you must setup java, postgres, and  postgis. it is not, properly speaking, the installation of gisgraphy, and if you already have postgres, postgis and java installed, you can go directly to the gisgraphy installation guide

<h2>Install and configure java / JVM</h2>
<div class="tip greentip">
If you already have Java installed, you can skip this section
</div>
<h3>Install Java</h3>
Open a shell and type : 
<div class="code">
sudo apt-get install sun-java6-bin sun-java6-fonts sun-java6-javadb sun-java6-jdk sun-java6-jre sun-java6-source ia32-sun-java6-bin
</div> 
Valid screen (tab + OK) :<br/>
<a href="images/jvm2.jpg" ><img src="images/thumb/jvm2.jpg" class="imagethumb" /></a>
<br/>
Accept the license (TAB to select 'yes' + OK) : <br/>
<a href="images/jvm.jpg" ><img src="images/thumb/jvm.jpg" class="imagethumb" /></a>
<br/>
<br/>
 <div class="tip greentip">
To see if Java is correctly installed, open a shell and type :
<div class="code">
java -version
</div>
<br/>
You should see : 
<div class="code">
<pre>
java version "1.6.0_06"
Java(TM) SE Runtime Environment (build 1.6.0_06-b02)
Java HotSpot(TM) 64-Bit Server VM (build 10.0-b22, mixed mode)
</pre>
</div>
</div>
<br/>
We will now configure the Java.

<h3>Configure Java</h3>
<br/>
Open a shell and type :
<div class="code">sudo update-java-alternatives --set ia32-java-6-sun</div>
<br/>
You may have this message if you are on a 64 bits machine :
Impossible de find alternative Â« /usr/lib/jvm/ia32-java-6-sun/jre/plugin/i386/ns7/libjavaplugin_oji.so ". thats not important. that's because there is no applet in 64 bits.

 <div class="tip greentip">
 To see if java is well configured type "ls -l  /etc/alternatives/java" you should see "/usr/lib/jvm/java-6-sun/jre/bin/java" 
 </div>
 <br/>
 We now need to add a JAVA_HOME environement variable  : 
 <ul>
 <li>add this line to .bashrc in your home directoy</li>
 <div class="code">
 export JAVA_HOME=/usr/lib/jvm/java-6-sun-1.6.0.06/
 </div>
 <br/>
 <li>execute "source ~/.bashrc" in a shell to take the changes into account.</li>
 </ul>
 <br/>

 Type "echo $JAVA_HOME" to check it is well set : /usr/lib/jvm/java-6-sun-1.6.0.06/<br/><br/>
The JVM is now well installed
<br/><br/>
<h2>Install postgresql and postgis</h2>
<div class="tip greentip">
If you already have Postgresql AND Postgis installed, you can skip this section
</div>
<h3>Install the debian / ubuntu package</h3>
Open a shell and type :
<div class=code>sudo apt-get install postgresql-8.3 postgresql-8.3-postgis </div>
<br/>
<div class="tip yellowtip">
It is HIGHLY recommended to have postgis 1.3.1 or greater and postgresql-8.3 for good performances....<br/>Those packages are availables from ubuntu hardy, it is recommended to update your ubuntu distribution if you have a lesser version
</div>
<br/>
<h3>Configure the postgres user / password</h3>
By default the postgres user can connect to postgres with the same password as the Unix one, but we'd like that postgres ask for a password and not use the UNIX one
<ul>
<li>Change postgres (unix) user :</li>

<div class=code>sudo passwd postgres</div>

<li>Log to Unix with user 'postgres' :</li> 

<div class=code>su - postgres </div>

and give the new password you've just type
<br/>
<br/>
<li>Check postgresql conf :</li>

<div class=code>vim /etc/postgresql/8.3/main/pg_hba.conf</div>
and edit it in order to have (at least) those 2 lines 
<div class=code>
<pre>
local  all     all                                        ident sameuser
host   all     all    127.0.0.1         255.255.255.255   ident sameuser
</pre>
</div>

<li>Define the postgres (postgresql) user's password</li>
Connect to postgres to change the postgresql password :
<div class=code>psql -d template1 -c "alter user postgres with password '<i>YOURPASSWORD</i>'"</div>

now you've changed the password for your postgresql user, we have to tell postgresql to use this password
<br/><br/>
<li>Update postgres conf </li>
Open a shell and Type : 
<div class=code> vim /etc/postgresql/8.3/main/pg_hba.conf</div>
and edit in order to have (at least) those two lines :
<div class=code>
<pre>
local  all     all                                        password
host   all     all    127.0.0.1         255.255.255.255   password
</pre>
</div>

<li>Restart postgres</li>
we must restart postresql to take our changes into account :<br/>
Close your postgres 's Linux session, type :
 <div class=code>exit</div>
Restart postgres : 
<div class=code>sudo /etc/init.d/postgresql-8.3 restart</div>
</ul>
<div class="tip greentip">
Tips : Install PGAdmin. It will be more user friendly than command line. 
<br/>
<br/>
In order to know if Postgis is correctly install, open a PostgreSQL connection or PgAdmin and type : <br/>
<ul>
<li><code>select version ();</code> or <code>SHOW server_version;</code>. It will give you the PostgreSQL version</li>
<li><code>select postgis_full_version () ;</code> It will give you the Postgis version </li>
</ul>
</div>
<h2>Define Linux settings</h2>
<div>
unix system define a maximum number of files that can be open. solr open a large number of files. to avoid message like "Too many open files" you must increase this limit.
open a shell and type 
<div class="code">
<pre>
sudo ulimit -n6000
</pre>
</div>
<br/>
will set the maximum number of open files to 6000.
<br/>
Sometimes this is not enough. and you have to edit the /etc/security/limits.conf file and add the two following lines :
<div class="code">
<pre>
* hard nofile 20000
* soft nofile 20000
</pre>
</div>
then close and re-open your unix session to take changes into account.<br/><br/>
<div class="tip greentip">
type <code>ulimit -aH</code> in a shell to check if the value has been set
</div>
<br/>
<h2>And now...</h2>
Now that you environement is setup, you can go to the Gisgraphy installation guide for Linux 
<br/>
</body>
</html>